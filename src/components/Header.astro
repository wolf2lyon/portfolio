---
import Navbar from "./Navbar.astro";
import Logo from "../assets/logo.svg";
---

<header
  class="fixed top-0 left-0 w-full h-20 flex items-center z-40 bg-gradient-to-b from-zinc-900 to-zinc-900/0"
>
  <div
    class="max-w-screen-2xl w-full mx-auto px-4 flex justify-between items-center md:px-6 md:grid md:grid-cols-[1fr_3fr_1fr]"
  >
    <h1 aria-label="logo">
      <a href="/" class="logo" aria-label="logo">
        <Logo width={48} height={48} />
      </a>
    </h1>
    <div class="relative md:justify-self-center">
      <button class="grid menu-btn md:hidden">
        <span class="material-symbols-outlined"> menu </span>
      </button>
      <Navbar />
    </div>
    <a href="#contact" class="btn btn-secondary md:justify-self-end">
      Contact Me
    </a>
  </div>
</header>

<script>
  // Si prefieres manejar la lógica en el script
  const menuButton = document.querySelector<HTMLButtonElement>(".menu-btn");
  const navHeader = document.querySelector<HTMLElement>(".navbar");

  if (menuButton) {
    menuButton.addEventListener("click", () => {
      const span = menuButton.querySelector<HTMLSpanElement>(
        "span.material-symbols-outlined"
      );

      // Obtener el estado actual como booleano
      const isOpen = menuButton.dataset.navopen === "true";

      if (span) {
        // Cambiar el ícono basado en el nuevo estado (opuesto al actual)
        span.textContent = isOpen ? "menu" : "close";
        // Actualizar el dataset con el nuevo estado (opuesto al actual)
        menuButton.dataset.navopen = String(!isOpen);
        if (!navHeader) return;
        if (isOpen) {
          navHeader.classList.remove("active");
        } else {
          navHeader.classList.add("active");
        }
      }
    });
  }
</script>
